<?php
/**
 * 希尔排序
 * 数据结构----------------数组
 * 最差时间复杂度-----------O(n^2)
 * 最优时间复杂度-----------O(n^1.3)
 * 平均时间复杂度-----------O(nlogn)
 * 空间复杂度--------------O(1)
 * 稳定性-----------------不稳定
————————————————
版权声明：本文为CSDN博主「lxxxxxl_」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_36045946/article/details/80751831
 * 希尔排序，也叫递减增量排序，是插入排序的一种更高效的改进版本。希尔排序是不稳定的排序算法。

原理：希尔排序通过将比较的全部元素分为几个区域来提升插入排序的性能。这样可以让一个元素可以一次性地朝最终位置前一大步。然后算法再取越来越小的步长进行排序，算法的最后一步就是普通的插入排序，但是到了这步，需排序的数据几乎是已排好的了（此时插入排序较快）。

增量序列：由Knuth提出，递归表达式为：h = 3 * h + 1；减小增量：h = (h - 1) / 3；此公式产生的逆置序列为：..., 314, 121, 40, 13, 4, 1。

 */

$arr = [1, 3, 34, 2, 32, 2, 78, -43, 53, -35, 0];
class Solution
{
    function ShellSort($arr){
        $length=count($arr);
        $h=0;
        while($h<=$length){
            $h=$h*3+1;
        }
        while($h>=1){
            for($i=$h;$i<$length;$i++){
                $j=$i-$h;
                $get=$arr[$i];
                while ($j>=0 && $arr[$j]>$get){
                    $arr[$j+$h]=$arr[$j];
                    $j=$j-$h;
                }
                $arr[$j+$h]=$get;
            }
            $h=($h-1)/3;
        }
        return $arr;
    }


}